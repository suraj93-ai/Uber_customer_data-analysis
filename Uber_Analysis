-- 1. Total Amount Spent by Each Customer on Zomato
-- 2. How many days each customer visited Zomato?
-- 3. What is the first product purchased by each customer?
-- 4. What is the most purchased item in the menu and how many times it was purchased by all customers?
-- 5. Which item was most popular for each customer?
-- 6. Which item was first purchased by the customer after they became a gold member?
-- 7. Which item was purchased by the customer just before they became a gold member?
-- 8. What is the total orders and amount spent for each customer before they became a gold member?
-- 9. Calculate points collected by each customer and which product has the most points till now.
-- 10. In the first one year after a customer joins the gold program (including the joining date), irrespective of what the customer has purchased, they earn 5 zomato points for every 10 rps spent. Who earned 1 or 3 points, and what was their points earnings in their first year?
-- 11. Rank all transactions of all customers.
-- 12. Rank all transactions for each member when they are a gold zomato member, and for every non-gold member transaction, mark as 'na'.

----------------------------------------------------------------------------------------------------------------------------------------------

-- 1. Total Amount Spent by Each Customer on Zomato:
SELECT DISTINCT
       s.userid,
       SUM(p.price) AS total_amt_sum
FROM
       Sales s
JOIN
       Product p
ON
       s.product_id = p.product_id
GROUP BY
       s.userid;

-- 2. How many days each customer visited Zomato?
SELECT
       userid,
       COUNT(DISTINCT created_date) AS days_count
FROM
       Sales
GROUP BY
       userid;

-- 3. What is the first product purchased by each customer?
SELECT
       *
FROM
       (
              SELECT
                     *,
                     RANK() OVER
                                (
                                       PARTITION BY userid
                                       ORDER BY created_date ASC
                                )
                     AS rnk
              FROM
                     Sales
       ) a
WHERE
       rnk = 1;

-- 4. What is the most purchased item in the menu and how many times it was purchased by all customers?
SELECT
       userid,
       COUNT(product_id) AS cnt
FROM
       sales
WHERE
       product_id = (
              SELECT
                     product_id
              FROM
                     sales
              GROUP BY
                     product_id
              ORDER BY
                     COUNT(product_id) DESC
              LIMIT 1
       )
GROUP BY
       userid;

-- 5. Which item was most popular for each customer?
SELECT
       *
FROM
       (
              SELECT
                     *,
                     RANK() OVER
                                (
                                       PARTITION BY userid
                                       ORDER BY cnt DESC
                                )
                     AS rnk
              FROM
                     (
                            SELECT
                                   userid,
                                   product_id,
                                   COUNT(product_id) AS cnt
                            FROM
                                   sales
                            GROUP BY
                                   1, 2
                     ) a
       ) b
WHERE
       rnk = 1;

-- 6. Which item was first purchased by the customer after they became a gold member?
SELECT
       *
FROM
       (
              SELECT
                     a.*,
                     RANK() OVER
                                (
                                       PARTITION BY userid
                                       ORDER BY created_date
                                )
                     AS rnk
              FROM
                     (
                            SELECT
                                   a.userid,
                                   a.created_date,
                                   a.product_id,
                                   b.gold_signup_date
                            FROM
                                   sales a
                            INNER JOIN
                                   goldusers_signup b
                            ON
                                   a.userid = b.userid
                            AND created_date >= gold_signup_date
                     ) a
       ) b
WHERE
       rnk = 1;

-- 7. Which item was purchased by the customer just before they became a gold member?
SELECT
       *
FROM
       (
              SELECT
                     a.*,
                     RANK() OVER
                                (
                                       PARTITION BY userid
                                       ORDER BY created_date DESC
                                )
                     AS rnk
              FROM
                     (
                            SELECT
                                   a.userid,
                                   a.created_date,
                                   a.product_id,
                                   b.gold_signup_date
                            FROM
                                   sales a
                            INNER JOIN
                                   goldusers_signup b
                            ON
                                   a.userid = b.userid
                            AND created_date <= gold_signup_date
                     ) a
       ) b
WHERE
       rnk = 1;

-- 8. What is the total orders and amount spent for each customer before they became a gold member?
SELECT
       userid,
       COUNT(created_date) AS order_purchased,
       SUM(price) AS total_amount_spent
FROM
       (
              SELECT
                     c.*,
                     d.price
              FROM
                     (
                            SELECT
                                   a.userid,
                                   a.created_date,
                                   a.product_id,
                                   b.gold_signup_date
                            FROM
                                   sales a
                            INNER JOIN
                                   goldusers_signup b
                            ON
                                   a.userid = b.userid
                            AND created_date <= gold_signup_date
                     ) c
              JOIN
                     product d
              ON
                     c.product_id = d.product_id
       )
GROUP BY
       userid;

-- 9. Calculate points collected by each customer and which product has the most points till now.
SELECT
       product_id,
       SUM(total_points) AS total_points_earned
FROM
       (
              SELECT
                     e.*,
                     amount / points AS total_points
              FROM
                     (
                            SELECT
                                   d.*,
                                   CASE
                                          WHEN product_id = 1 THEN 5
                                          WHEN product_id = 2 THEN 2
                                          WHEN product_id = 3 THEN 5
                                          ELSE 0
                                   END AS points
                            FROM
                                   (
                                          SELECT
                                                 c.userid,
                                                 c.product_id,
                                                 SUM(price) AS amount
                                          FROM
                                                 (
                                                        SELECT
                                                               a.*,
                                                               b.price
                                                        FROM
                                                               sales a
                                                        JOIN
                                                               product b
                                                        ON
                                                               a.product_id = b.product_id
                                                 ) c
                                          GROUP BY
                                                 userid,
                                                 product_id
                                   ) d
                     ) e
       )
GROUP BY
       product_id;

-- 10. In the first one year after a customer joins the gold program (including the joining date), irrespective of what the customer has purchased, they earn 5 zomato points for every 10 rps spent. Who earned 1 or 3 points, and what was their points earnings in their first year?
SELECT
       c.*,
       d.price * 0.5 AS total_points_earned
FROM
       (
              SELECT
                     a.userid,
                     a.created_date,
                     a.product_id,
                     b.gold_signup_date
              FROM
                     sales a
              JOIN
                     goldusers_signup b
              ON
                     a.userid = b.userid
              AND created_date >= gold_signup_date
              AND created_date <= DATEADD(year, 1, gold_signup_date)
       ) c
INNER JOIN
       product d
ON
       a.product_id = d.product_id;

-- 11. Rank all transactions of all customers.
SELECT
       *,
       RANK() OVER
               (
                      PARTITION BY userid
                      ORDER BY created_date ASC
               )
FROM
       sales;

-- 12. Rank all transactions for each member when they are a gold zomato member, and for every non-gold member transaction, mark as 'na'.
SELECT
       e.*,
       CASE
              WHEN rnk = 0 THEN 'na'
              ELSE CAST(rnk AS VARCHAR)
       END AS rnkk
FROM
       (
              SELECT
                     c.*,
                     CAST(
                            (
                                   CASE
                                          WHEN gold_signup_date IS NULL THEN 0
                                          ELSE RANK() OVER
                                                          (
                                                                 PARTITION BY userid
                                                                 ORDER BY created_date DESC
                                                          )
                                   END
                            ) AS VARCHAR
                     ) AS rnk
              FROM
                     (
                            SELECT
                                   a.userid,
                                   a.created_date,
                                   a.product_id,
                                   b.gold_signup_date
                            FROM
                                   sales a
                            LEFT JOIN
                                   goldusers_signup b
                            ON
                                   a.userid = b.userid
                            AND created_date >= gold_signup_date
                     ) c
       ) e;

